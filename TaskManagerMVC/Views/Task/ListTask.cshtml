@model List<TaskManagerMVC.Dtos.TaskDto>
@using TaskManagerMVC.Helpers

@{
    ViewData["Title"] = "Task List";
    var canCreate = (bool)(ViewBag.CanCreate ?? false);
    var priorities = ViewBag.PriorityId as SelectList;
    var statuses = ViewBag.StatusId as SelectList;
    var selectedPriorityId = ViewBag.SelectedPriorityId?.ToString();
    var selectedStatusId = ViewBag.SelectedStatusId?.ToString();
    var selectedTitle = ViewBag.SelectedTitle as string;
}

<div class="d-flex justify-content-between align-items-center mt-3">
    <h2>Task List</h2>
    @if (canCreate)
    {
        <a asp-action="CreateTask" class="btn btn-primary">+ Add new</a>
    }
</div>

<!-- Filter Form -->
<form method="get" asp-action="Search" class="mt-3">
    <div class="row">
        <div class="col-md-4">
            <input class="form-control" type="text" name="title" placeholder="Search Title" value="@selectedTitle" />
        </div>
        <div class="col-md-3">
            <select class="form-control" name="priorityId">
                <option value="">-- Select priority --</option>
                @foreach (var item in priorities)
                {
                    <option value="@item.Value" selected="@(item.Value == selectedPriorityId ? "selected" : null)">
                        @item.Text
                    </option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select class="form-control" name="statusId">
                <option value="">-- Select status --</option>
                @foreach (var item in statuses)
                {
                    <option value="@item.Value" selected="@(item.Value == selectedStatusId ? "selected" : null)">
                        @item.Text
                    </option>
                }
            </select>
        </div>
        <div class="col-md-2 text-end">
            <button type="submit" class="btn btn-success">Search</button>
        </div>
    </div>
</form>

<hr />

@if (Model != null && Model.Any())
{
    <div class="row">
        @foreach (var task in Model)
        {
            <div class="col-md-3 mb-4">
                <div class="card h-100 shadow-sm">
                    <div class="card-header">
                        <!-- Priority -->
                        <div class="mb-2">
                            <span class="badge @TaskColorHelper.GetPriorityBadgeClass(task.PriorityName)">
                                @task.PriorityName
                            </span>
                        </div>

                        <!-- Title + Status on same line -->
                        <div class="d-flex justify-content-between align-items-center">
                            <a asp-controller="Task" asp-action="Update" asp-route-id="@task.TaskId" class="link-dark text-decoration-none">
                                <strong>@task.Title</strong>
                            </a>
                            <span class="badge @TaskColorHelper.GetStatusBadgeClass(task.StatusName)">
                                @task.StatusName
                            </span>
                        </div>

                        <!-- User name -->
                        <small>Assign to <strong>@task.UserFullName</strong></small>
                    </div>


                    <div class="card-body">
                        <p class="card-text">@task.Description</p>
                    </div>

                    <div class="card-footer text-muted small">
                        <div><i class="bi bi-clock"></i> Start: @task.StartDate</div>
                        <div><i class="bi bi-calendar-check"></i> Due: @task.DueDate</div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="text-center mt-4">No data to display</p>
}
