@model List<TaskManagerAPI.Dtos.TaskDto>

@{
    ViewData["Title"] = "Task List";
}

<h1>Task List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@if (Model != null && Model.Any())
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model[0].Title)</th>
                <th>@Html.DisplayNameFor(model => model[0].Description)</th>
                <th>@Html.DisplayNameFor(model => model[0].StartDate)</th>
                <th>@Html.DisplayNameFor(model => model[0].DueDate)</th>
                <th>@Html.DisplayNameFor(model => model[0].PriorityName)</th>
                <th>@Html.DisplayNameFor(model => model[0].StatusName)</th>
                <th>@Html.DisplayNameFor(model => model[0].UserFullName)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.DueDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.PriorityName)</td>
                    <td>@Html.DisplayFor(modelItem => item.StatusName)</td>
                    <td>@Html.DisplayFor(modelItem => item.UserFullName)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.TaskId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.TaskId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.TaskId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info">
        No tasks found.
    </div>
}
