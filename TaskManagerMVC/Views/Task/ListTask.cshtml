@model List<TaskManagerAPI.Dtos.TaskDto>


@{
    ViewData["Title"] = "Task List";
}

<a asp-action="CreateTask" class="btn btn-primary m-2">+ Add new</a>

<!-- Filters Form -->
<form method="get" asp-action="Search">

    <div class="row mt-2">
        <div class="col-md-4">
            <div class="input-group">
                <input class="form-control" type="text" name="title" placeholder="Tìm theo tiêu đề"
                       value="@ViewBag.SelectedTitle" />
            </div>
        </div>
    </div>

    <div class="form-inline d-flex align-items-center flex-wrap mt-3">
        <select class="form-control custom-select w-25 m-2" name="priorityId">
            <option value="">-- Chọn độ ưu tiên --</option>
            @foreach (var item in (SelectList)ViewBag.PriorityId)
            {
                var isSelected = ViewBag.SelectedPriorityId?.ToString() == item.Value;
                <option value="@item.Value" selected="@(isSelected ? "selected" : null)">@item.Text</option>
            }
        </select>


        <select class="form-control custom-select w-25 m-2" name="statusId">
            <option value="">-- Chọn trạng thái --</option>
            @foreach (var item in (SelectList)ViewBag.StatusId)
            {
                var isSelected = ViewBag.SelectedStatusId?.ToString() == item.Value;
                <option value="@item.Value" selected="@(isSelected ? "selected" : null)">@item.Text</option>
            }
        </select>


        <button type="submit" class="btn btn-success m-3">Search</button>
    </div>
</form>


@if (Model != null && Model.Any())
{
    <div class="row g-0">
        @foreach (var task in Model)
        {
            <div class="card col-3 m-2">
                <div class="card-header">
                    <span class="badge bg-secondary">Task</span> -

                    @{
                        string badgeColor = task.StatusName switch
                        {
                            "Not Yet" => "badge bg-danger",
                            "In Progress" => "badge bg-warning text-dark",
                            "Done" => "badge bg-success",
                            _ => "badge bg-secondary"
                        };
                    }

                    <span class="@(badgeColor)">@task.StatusName</span><br />
                    <a asp-controller="Task" asp-action="Update" asp-route-id="@task.TaskId" class="link-dark text-decoration-none">
                        <strong>@task.Title</strong>
                    </a>
                    <br />
                    <small><strong>@task.UserFullName</strong></small>
                </div>
                <div class="card-body">
                    <h5 class="card-title">@task.Description</h5>
                </div>
                <div class="card-footer text-muted">
                    <small>@task.StartDate</small>

                    @{
                        string badgeColor2 = task.PriorityName switch
                        {
                            "Low" => "badge bg-success",
                            "Medium" => "badge bg-warning text-dark",
                            "High" => "badge bg-danger",
                            _ => "badge bg-secondary"
                        };
                    }
                    <span class="badge @(badgeColor2)">@task.PriorityName</span>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="text-center">No data to display</p>
}
